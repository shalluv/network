definitions:
  domain.Group:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  domain.Message:
    properties:
      content:
        type: string
      from:
        type: string
      id:
        type: string
      to:
        type: string
      to_group:
        type: boolean
    type: object
  domain.Profile:
    properties:
      image:
        type: string
      username:
        type: string
    type: object
  rest.CreateGroupInput:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
  rest.EditMessageInput:
    properties:
      content:
        type: string
    type: object
  rest.JoinGroupInput:
    properties:
      username:
        type: string
    type: object
  rest.UploadProfileInput:
    properties:
      image:
        type: string
      username:
        type: string
    type: object
  rest.errorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: network project backend server
  title: Server
  version: "1.0"
paths:
  /{user1}/{user2}/messages:
    get:
      description: retrieve messages between users
      parameters:
      - description: user1
        in: path
        name: user1
        required: true
        type: string
      - description: user2
        in: path
        name: user2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Message'
            type: array
      summary: get messages between users
      tags:
      - messages
  /groups:
    get:
      description: retrieve all groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Group'
            type: array
      summary: get all groups
      tags:
      - groups
    post:
      consumes:
      - application/json
      description: create group chat
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest.CreateGroupInput'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Group'
      summary: create group chat
      tags:
      - groups
  /groups/{group_id}:
    post:
      description: join a group
      parameters:
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest.JoinGroupInput'
      responses:
        "204":
          description: No Content
      summary: join group
      tags:
      - groups
  /groups/{group_id}/members:
    get:
      description: retrieve members in group
      parameters:
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Profile'
            type: array
      summary: get members in group
      tags:
      - groups
  /groups/{group_id}/members/{username}:
    delete:
      description: leave a group
      parameters:
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: leave group
      tags:
      - groups
  /groups/{group_id}/messages:
    get:
      description: retrieve messages in group
      parameters:
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      - description: user
        in: query
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Message'
            type: array
      summary: get messages in group
      tags:
      - groups
  /messages/{id}:
    delete:
      description: delete a message
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: delete a message
      tags:
      - messages
    patch:
      description: edit a message
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest.EditMessageInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Message'
      summary: edit a message
      tags:
      - messages
  /profiles:
    get:
      description: retrieve all user profiles in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Profile'
            type: array
      summary: get all user profiles
      tags:
      - profiles
    post:
      consumes:
      - application/json
      description: upload user profile
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest.UploadProfileInput'
      responses:
        "204":
          description: No Content
      summary: upload profile
      tags:
      - profiles
  /profiles/{username}:
    get:
      description: get profile by username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Profile'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: get user profile
      tags:
      - profiles
  /profiles/{username}/groups:
    get:
      description: retrieve all groups of user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Group'
            type: array
      summary: get all groups of user
      tags:
      - profiles
swagger: "2.0"
